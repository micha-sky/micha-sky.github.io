<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development blog</title>
    <description>My name is Alex and this is my development blog.
</description>
    <link>micha-sky.github.io/</link>
    <atom:link href="micha-sky.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 03 Dec 2015 19:05:01 +0200</pubDate>
    <lastBuildDate>Thu, 03 Dec 2015 19:05:01 +0200</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>ftp server configuration on amazon ec2</title>
        <description>&lt;p&gt;quick note how to set up an ftp server on ubuntu. first you install vsftpd:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;sudo apt-get install vsftpd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then you edit configuration file with vim or nano or whatever you like
/etc/vsftpd.conf&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;anonymous_enable=NO&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;local_enable=YES&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;write_enable=YES&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;chroot_local_user=YES&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then you need to add passive ports range to config file like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;pasv_min_port=8000&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;pasv_max_port=8100&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;also don’t forget to open these port in amazon console’s security group.&lt;/p&gt;
</description>
        <pubDate>Mon, 30 Nov 2015 05:26:58 +0200</pubDate>
        <link>micha-sky.github.io/development/2015/11/30/how-to-setup-ftp-server-on-linux.html</link>
        <guid isPermaLink="true">micha-sky.github.io/development/2015/11/30/how-to-setup-ftp-server-on-linux.html</guid>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>log4j configuration file</title>
        <description>&lt;p&gt;for those, who don’t know where to put your log4j2.xml file the answer is simple: src/main/resources&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Nov 2015 00:39:58 +0200</pubDate>
        <link>micha-sky.github.io/development/2015/11/28/log4j-xml-file.html</link>
        <guid isPermaLink="true">micha-sky.github.io/development/2015/11/28/log4j-xml-file.html</guid>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>how to set up jenkins project with glassfish</title>
        <description>&lt;p&gt;if you want to use jenkins and glassfish on one instance, it’s very easy to for continious integration.&lt;/p&gt;

&lt;p&gt;first you want to add new maven project and configure git repository. &lt;/p&gt;

&lt;p&gt;then you need to add pre-build script that pulls changes from repository:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;!/bin/bash

&lt;span class=&quot;go&quot;&gt;cd /path/to/repository&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;git pull origin master&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then you specify maven goal, e.g. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;mvn clean package -DskipTests=true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;after that you add post-build script, which deploys build to :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;!/bin/bash

&lt;span class=&quot;go&quot;&gt;echo -n &amp;quot;Undeploying current version...&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/opt/glassfish4/bin/asadmin undeploy ROOT&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;echo &amp;quot;done&amp;quot;&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;echo -n &amp;quot;Stopping glassfish...&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/opt/glassfish4/bin/asadmin stop-domain yourdomain&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;echo &amp;quot;done&amp;quot;&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;echo -n &amp;quot;Starting glassfish...&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/opt/glassfish4/bin/asadmin start-domain yourdomain&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;echo &amp;quot;done&amp;quot;&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;echo -n &amp;quot;Deploying ROOT.WAR...&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/opt/glassfish4/bin/asadmin --user admin deploy --contextroot / --name ROOT /var/lib/jenkins/workspace/projectname/target/ROOT.war&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;echo &amp;quot;done&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;aslo you want to use –passwordfile option, that allows you not to type password every time you run this script.
passwordfile contains AS_ADMIN_PASSWORD=yourpassword&lt;/p&gt;

&lt;p&gt;this would probably work without stopping and starting domain.&lt;/p&gt;

&lt;p&gt;after setting up project you want to build it, and schedule your build.&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Nov 2015 00:39:58 +0200</pubDate>
        <link>micha-sky.github.io/deployment/2015/11/28/how-to-deploy-from-jenkins-to-glassfish.html</link>
        <guid isPermaLink="true">micha-sky.github.io/deployment/2015/11/28/how-to-deploy-from-jenkins-to-glassfish.html</guid>
        
        
        <category>deployment</category>
        
      </item>
    
      <item>
        <title>welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Mon, 23 Nov 2015 00:20:58 +0200</pubDate>
        <link>micha-sky.github.io/jekyll/update/2015/11/23/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">micha-sky.github.io/jekyll/update/2015/11/23/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
