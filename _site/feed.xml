<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development blog</title>
    <description>My name is Alex and this is my development blog.
</description>
    <link>micha-sky.github.io/</link>
    <atom:link href="micha-sky.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 27 Mar 2017 17:01:59 +0300</pubDate>
    <lastBuildDate>Mon, 27 Mar 2017 17:01:59 +0300</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>data interpolation with excel</title>
        <description>&lt;p&gt;Select 2 cells you want to create range between
right click -&amp;gt; Fill -&amp;gt; Series -&amp;gt; Profit&lt;/p&gt;

&lt;p&gt;it will automatically fill all cells with equal step which is pretty cool when you have a lot of data
with gaps that needs to be interpolated&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/screenshot1.png&quot; alt=&quot;image1&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/screenshot2.png&quot; alt=&quot;image2&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Nov 2016 11:24:58 +0200</pubDate>
        <link>micha-sky.github.io/development/2016/11/24/data-interpolation-with-excel.html</link>
        <guid isPermaLink="true">micha-sky.github.io/development/2016/11/24/data-interpolation-with-excel.html</guid>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>sending emails to multiple recepients in python</title>
        <description>&lt;p&gt;You need to understand the difference between the visible address of an email, and the delivery.&lt;/p&gt;

&lt;p&gt;msg[“To”] is essentially what is printed on the letter. It doesn’t actually have any effect. Except that your email client, just like the regular post officer, will assume that this is who you want to send the email to.&lt;/p&gt;

&lt;p&gt;The actual delivery however can work quite different. So you can drop the email (or a copy) into the post box of someone completely different.&lt;/p&gt;

&lt;p&gt;There are various reasons for this. For example forwarding. The To: header field doesn’t change on forwarding, however the email is dropped into a different mailbox.&lt;/p&gt;

&lt;p&gt;The smtp.sendmail command now takes care of the actual delivery. email.Message is the contents of the letter only, not the delivery.&lt;/p&gt;

&lt;p&gt;In low-level SMTP, you need to give the receipients one-by-one, which is why a list of adresses (not including names!) is the sensible API.&lt;/p&gt;

&lt;p&gt;For the header, it can also contain for example the name, e.g. To: First Last &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#101;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#064;&amp;#097;&amp;#100;&amp;#100;&amp;#114;&amp;#046;&amp;#116;&amp;#108;&amp;#100;&quot;&gt;&amp;#101;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#064;&amp;#097;&amp;#100;&amp;#100;&amp;#114;&amp;#046;&amp;#116;&amp;#108;&amp;#100;&lt;/a&gt;, Other User &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#111;&amp;#116;&amp;#104;&amp;#101;&amp;#114;&amp;#064;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#116;&amp;#108;&amp;#100;&quot;&gt;&amp;#111;&amp;#116;&amp;#104;&amp;#101;&amp;#114;&amp;#064;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#116;&amp;#108;&amp;#100;&lt;/a&gt;. Your code example therefore is not recommended, as it will fail delivering this mail, since just by splitting it on , you still not not have the valid adresses!&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Nov 2016 10:04:58 +0200</pubDate>
        <link>micha-sky.github.io/development/2016/11/19/sending-emails-to-multiple-recepients-in-python.html</link>
        <guid isPermaLink="true">micha-sky.github.io/development/2016/11/19/sending-emails-to-multiple-recepients-in-python.html</guid>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>scraping public information from facebook</title>
        <description>
</description>
        <pubDate>Wed, 16 Nov 2016 16:38:58 +0200</pubDate>
        <link>micha-sky.github.io/development/2016/11/16/scraping-public-data-from-facebook.html</link>
        <guid isPermaLink="true">micha-sky.github.io/development/2016/11/16/scraping-public-data-from-facebook.html</guid>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>watershed delineation with arcmap</title>
        <description>&lt;p&gt;simple steps for delineation of watershed :
* get dem (digital elevation model) for needed region 
(http://srtm.csi.cgiar.org/SELECTION/inputCoord.asp)
* fill dem (fills sinks in raster data)
* flow direction
* flow accumulation
* point and outlet, snap pour point
* watershed
* viola&lt;/p&gt;
</description>
        <pubDate>Sat, 09 Jul 2016 11:23:58 +0300</pubDate>
        <link>micha-sky.github.io/development/2016/07/09/watershed-delineation-with-arcmap.html</link>
        <guid isPermaLink="true">micha-sky.github.io/development/2016/07/09/watershed-delineation-with-arcmap.html</guid>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>deployment of rails application to linux server</title>
        <description>&lt;p&gt;this artile assumes you have a working rails applicaition running on localhost.&lt;/p&gt;
</description>
        <pubDate>Sat, 09 Jul 2016 11:16:58 +0300</pubDate>
        <link>micha-sky.github.io/development/2016/07/09/deploying-rails-app-to-linux-server.html</link>
        <guid isPermaLink="true">micha-sky.github.io/development/2016/07/09/deploying-rails-app-to-linux-server.html</guid>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>csv manipulation with sed and awk</title>
        <description>&lt;p&gt;if you have huge file and you need to split it into pieces by 40MB&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;split --bytes 40M --numeric-suffixes --suffix-length=3 file.csv spl&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;split file by 150 lines with -l parameter. spl is prefix for split files&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;split --l 150 --numeric-suffixes --suffix-length=3 file.csv spl&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;count number o lines with wc command. -l indicates lines&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;wc -l file.csv&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;remove whitespace from file with sed &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;sed -i &amp;#39;/^$/d&amp;#39; file.csv&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;select columns 1-3 from file to newfile&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;cut -d, -f1-3 file.csv &amp;gt; newfile.csv&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 08 Jul 2016 09:23:58 +0300</pubDate>
        <link>micha-sky.github.io/development/2016/07/08/csv-manipulation-with-sed-and-awk.html</link>
        <guid isPermaLink="true">micha-sky.github.io/development/2016/07/08/csv-manipulation-with-sed-and-awk.html</guid>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>event triggers in ubuntu</title>
        <description>&lt;p&gt;if you need to run scripts based on file creation or deletion or whatever you will use inoify interface in linux.&lt;/p&gt;

&lt;p&gt;the tool i use is incron it allows to watch the directory and run scripts based on event&lt;/p&gt;

&lt;p&gt;to install in type&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;sudo apt-get install incron&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;after that you need to create tables for user&lt;/p&gt;

&lt;p&gt;to install in type&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;sudo vi /etc/incron.allow&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and add user root and save it. this means root user can use crontab.&lt;/p&gt;

&lt;p&gt;to access cronab just type &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;sudo incrontab -e&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;it is similar to cron, so you can type -r to remove table or -l to list jobs.&lt;/p&gt;

&lt;p&gt;the basic patter is&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;&amp;lt;PATH&amp;gt; &amp;lt;EVENT&amp;gt; ACTION&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;events are:&lt;/p&gt;

&lt;p&gt;IN_ACCESS           File was accessed (read) (*)&lt;/p&gt;

&lt;p&gt;IN_ATTRIB           Metadata changed (permissions, timestamps, extended attributes, etc.) (*)&lt;/p&gt;

&lt;p&gt;IN_CLOSE_WRITE      File opened for writing was closed (*)&lt;/p&gt;

&lt;p&gt;IN_CLOSE_NOWRITE    File not opened for writing was closed (*)&lt;/p&gt;

&lt;p&gt;IN_CREATE           File/directory created in watched directory (&lt;em&gt;)
IN_DELETE           File/directory deleted from watched directory (&lt;/em&gt;)
IN_DELETE_SELF           Watched file/directory was itself deleted
IN_MODIFY           File was modified (&lt;em&gt;)
IN_MOVE_SELF        Watched file/directory was itself moved
IN_MOVED_FROM       File moved out of watched directory (&lt;/em&gt;)
IN_MOVED_TO         File moved into watched directory (&lt;em&gt;)
IN_OPEN             File was opened (&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;wildcards are used to pass filename to script:&lt;/p&gt;

&lt;p&gt;$$   dollar sign
$@   watched filesystem path (see above)
$#   event-related file name
$%   event flags (textually)
$&amp;amp;   event flags (numerically)&lt;/p&gt;

&lt;p&gt;all logs are written lo /var/log/syslog&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Jul 2016 11:58:58 +0300</pubDate>
        <link>micha-sky.github.io/development/2016/07/01/event-triggers-in-ubuntu.html</link>
        <guid isPermaLink="true">micha-sky.github.io/development/2016/07/01/event-triggers-in-ubuntu.html</guid>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>installing caffe neural net on ubuntu</title>
        <description>&lt;p&gt;if you want to use google’s deep dream you surely need to install caffe deep learning framework&lt;/p&gt;

&lt;p&gt;i won’t describe cloning caffe from github (duh) so let’s get going&lt;/p&gt;

&lt;p&gt;i assume we won’t use CUDA (it’s a whole new story) so you need to make following changes in Makefile.config.example &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;CPU_ONLY := 1&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;make all&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;make test&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;make runtest&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;you may want to add -j 4 to those commands to run run in 4 or whatever parallel threads you want to run&lt;/p&gt;

&lt;p&gt;also important&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;export PYTHONPATH=/home/username/caffe/python&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Sat, 25 Jun 2016 08:05:58 +0300</pubDate>
        <link>micha-sky.github.io/development/2016/06/25/installing-cafe-neural-net-on-ubuntu.html</link>
        <guid isPermaLink="true">micha-sky.github.io/development/2016/06/25/installing-cafe-neural-net-on-ubuntu.html</guid>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>installing caffe neural net on ubuntu</title>
        <description>if you want to use google&#39;s deep dream you surely need to install caffe deep learning framework

i won&#39;t describe cloning caffe from github (duh) so let&#39;s get going


i assume we won&#39;t use CUDA (it&#39;s a whole new story) so you need to make following changes in Makefile.config.example before renaming in to Makefile.config

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;CPU_ONLY := 1&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

then 
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;make all&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;make test&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;make runtest&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

you may want to add -j 4 to those commands to run run in 4 or whatever parallel threads you want to run

</description>
        <pubDate>Sat, 25 Jun 2016 08:05:58 +0300</pubDate>
        <link>micha-sky.github.io/development/2016/06/25/installing-cafe-neural-net-on-ubuntu.html</link>
        <guid isPermaLink="true">micha-sky.github.io/development/2016/06/25/installing-cafe-neural-net-on-ubuntu.html</guid>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>nginx upgrade issues</title>
        <description>&lt;p&gt;if you upgrading to ubuntu 16&lt;/p&gt;

&lt;p&gt;dpkg: error processing archive /var/cache/apt/archives/nginx-extras_1%3a1.10.1-8.5.0.29~trusty1_amd64.deb (–unpack):
 trying to overwrite ‘/usr/sbin/nginx’, which is also in package nginx 1.11.2-1~trusty
 dpkg-deb: subprocess paste killed by signal (Broken pipe)&lt;/p&gt;

&lt;p&gt;sudo apt-get install -f&lt;/p&gt;

&lt;p&gt;sudo dpkg -i –force overwrite /var/cache/apt/archives/nginx-common_1%3a1.10.1-8.5.0.29~trusty1_all.deb&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Jun 2016 09:23:58 +0300</pubDate>
        <link>micha-sky.github.io/development/2016/06/20/nginx-upgrade-issues.html</link>
        <guid isPermaLink="true">micha-sky.github.io/development/2016/06/20/nginx-upgrade-issues.html</guid>
        
        
        <category>development</category>
        
      </item>
    
  </channel>
</rss>
